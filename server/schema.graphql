type Query {
  hello: String!
  feed(skip: Int, take: Int, orderBy: MessageOrderByInput): [Message!]!
}

input MessageOrderByInput {
  id: Sort
  author: Sort
  text: Sort
  timeStamp: Sort
}

enum Sort {
  asc
  desc
}

type Mutation {
  addMessage(author: String!, text: String!): Message!
}

type Subscription {
  newMessage: Message
}

type Message {
  id: Int!
  timeStamp: String!
  author: String!
  text: String!
}
